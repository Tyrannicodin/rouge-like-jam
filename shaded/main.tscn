[gd_scene load_steps=6 format=2]

[ext_resource path="res://game/board.tscn" type="PackedScene" id=1]
[ext_resource path="res://shaded/ShaderPropertyHandler.cs" type="Script" id=2]
[ext_resource path="res://assembly/board.tscn" type="PackedScene" id=4]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 pink;

void fragment() {
	vec4 color = texture(TEXTURE, UV).rgba;
	COLOR = color;
	if (color.r > .9) {
		COLOR = pink;
	} else if (color.g > .9) {
		COLOR = vec4(0.07, 0.01, 0.01, 1.0);
	} else if (color.b > .9) {
		COLOR = vec4(0.7, 0.78, 0.78, 1.0);
	}
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/pink = Plane( 0.7, 0.281, 0.478, 1 )

[node name="Control" type="Node2D"]

[node name="ViewportContainer" type="ViewportContainer" parent="."]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 600.0
margin_bottom = 600.0
script = ExtResource( 2 )

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 500, 500 )
handle_input_locally = false
disable_3d = true
render_target_update_mode = 3

[node name="Root" parent="ViewportContainer/Viewport" instance=ExtResource( 1 )]

[node name="Components" parent="ViewportContainer/Viewport" instance=ExtResource( 4 )]
position = Vector2( 180, 0 )
